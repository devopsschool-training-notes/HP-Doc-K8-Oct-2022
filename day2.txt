Some Discussion on Architecture
================================
Master
------------------------
- API server 		-> POD -> Container -> Docker image -> GCR
- Etcd				-> POD -> Container -> Docker image -> GCR
- Controller mgmr	-> POD -> Container -> Docker image -> GCR
- Schedular			-> POD -> Container -> Docker image -> GCR
- Kube Proxy		-> POD -> Container -> Docker image -> GCR

- kubelet
- Docker / ContainerD
- kubectl 
- kubeadm init

Worker
-----------------------
- Kube Proxy		-> POD -> Container -> Docker image -> GCR

- Docker / ContainerD
- kubelet
- kubectl 
- kubeadm join

Workstation
-----------------------
- kubectl
		read "config"
		~/.kube/config
						- API server
						- cert + pvt + user



Plan for K8 Setup
===============================
Laptop --> Master+Workstation + Worker
		 -------------------------------	

We would setup k8
===============================
Master+Workstation - 13.126.109.111
Worker - 15.206.146.185


kubeadm join 172.31.25.169:6443 --token qkpl6t.wmd75nj5mxe2zg9h --discovery-token-ca-cert-hash sha256:f24928d8519b478d3315a88653c7a6440ff542c49853f7e3c3c3b8206143cd0f


Validate
===============================

rathi.priya1@gmail.com		3.110.143.211
madhurathunga@gmail.com	13.232.29.242
sruthiramnath.95@gmail.com	65.2.180.243
vijay.chakri@gmail.com		65.2.148.173
ranjan.adi2112@gmail.com	3.110.134.199
rijilabraham@gmail.com		13.234.37.139
surajk.035@gmail.com		3.110.94.195
shwethas7507@gmail.com		15.206.169.109
ayushsinha126@gmail.com	13.127.99.9
balaji2018@gmail.com		65.0.17.36


=================MASTER=============================
   9  ls
   10  git clone https://github.com/certifications-tutorials/cks-course-environment
   11  clear
   12  ls
   13  cd cks-course-environment/
   14  clear
   15  ls
   16  cd cluster-setup/
   17  clar


==================WORKER============================

  4  ls
    5  git clone https://github.com/certifications-tutorials/cks-course-environment
    6  clear
    7  ls
    8  cd cks-course-environment/
    9  clear
   10  ls
   11  cd cluster-setup/
   12  ls
   13  cd latest/
   14  clear
   15  ls
   16  chmod 755 install_worker.sh
   17  clear
   18  ls
   19  ./install_worker.sh
   20  kubeadm join 172.31.25.169:6443 --token qkpl6t.wmd75nj5mxe2zg9h --discovery-token-ca-cert-hash sha256:f24928d8519be3c3c3b8206143cd0f
   21  clear


# Get a node name from 
$ kubectl get nodes

#  Replacing mymasternode with ur node name
kubectl taint node mymasternode node-role.kubernetes.io/master:NoSchedule-
==========================================================================


NAME                              SHORTNAMES   APIVERSION                             NAMESPACED   KIND
bindings                                       v1                                     true         Binding
componentstatuses                 cs           v1                                     false        ComponentStatus
configmaps                        cm           v1                                     true         ConfigMap
endpoints                         ep           v1                                     true         Endpoints
events                            ev           v1                                     true         Event
limitranges                       limits       v1                                     true         LimitRange
namespaces                        ns           v1                                     false        Namespace
nodes                             no           v1                                     false        Node
persistentvolumeclaims            pvc          v1                                     true         PersistentVolumeClaim
persistentvolumes                 pv           v1                                     false        PersistentVolume
pods                              po           v1                                     true         Pod
podtemplates                                   v1                                     true         PodTemplate
replicationcontrollers            rc           v1                                     true         ReplicationController
resourcequotas                    quota        v1                                     true         ResourceQuota
secrets                                        v1                                     true         Secret
serviceaccounts                   sa           v1                                     true         ServiceAccount
services                          svc          v1                                     true         Service
mutatingwebhookconfigurations                  admissionregistration.k8s.io/v1        false        MutatingWebhookConfiguration
validatingwebhookconfigurations                admissionregistration.k8s.io/v1        false        ValidatingWebhookConfiguration
customresourcedefinitions         crd,crds     apiextensions.k8s.io/v1                false        CustomResourceDefinition
apiservices                                    apiregistration.k8s.io/v1              false        APIService
controllerrevisions                            apps/v1                                true         ControllerRevision
daemonsets                        ds           apps/v1                                true         DaemonSet
deployments                       deploy       apps/v1                                true         Deployment
replicasets                       rs           apps/v1                                true         ReplicaSet
statefulsets                      sts          apps/v1                                true         StatefulSet
tokenreviews                                   authentication.k8s.io/v1               false        TokenReview
localsubjectaccessreviews                      authorization.k8s.io/v1                true         LocalSubjectAccessReview
selfsubjectaccessreviews                       authorization.k8s.io/v1                false        SelfSubjectAccessReview
selfsubjectrulesreviews                        authorization.k8s.io/v1                false        SelfSubjectRulesReview
subjectaccessreviews                           authorization.k8s.io/v1                false        SubjectAccessReview
horizontalpodautoscalers          hpa          autoscaling/v2                         true         HorizontalPodAutoscaler
cronjobs                          cj           batch/v1                               true         CronJob
jobs                                           batch/v1                               true         Job
certificatesigningrequests        csr          certificates.k8s.io/v1                 false        CertificateSigningRequest
leases                                         coordination.k8s.io/v1                 true         Lease
bgpconfigurations                              crd.projectcalico.org/v1               false        BGPConfiguration
bgppeers                                       crd.projectcalico.org/v1               false        BGPPeer
blockaffinities                                crd.projectcalico.org/v1               false        BlockAffinity
clusterinformations                            crd.projectcalico.org/v1               false        ClusterInformation
felixconfigurations                            crd.projectcalico.org/v1               false        FelixConfiguration
globalnetworkpolicies                          crd.projectcalico.org/v1               false        GlobalNetworkPolicy
globalnetworksets                              crd.projectcalico.org/v1               false        GlobalNetworkSet
hostendpoints                                  crd.projectcalico.org/v1               false        HostEndpoint
ipamblocks                                     crd.projectcalico.org/v1               false        IPAMBlock
ipamconfigs                                    crd.projectcalico.org/v1               false        IPAMConfig
ipamhandles                                    crd.projectcalico.org/v1               false        IPAMHandle
ippools                                        crd.projectcalico.org/v1               false        IPPool
kubecontrollersconfigurations                  crd.projectcalico.org/v1               false        KubeControllersConfiguration
networkpolicies                                crd.projectcalico.org/v1               true         NetworkPolicy
networksets                                    crd.projectcalico.org/v1               true         NetworkSet
endpointslices                                 discovery.k8s.io/v1                    true         EndpointSlice
events                            ev           events.k8s.io/v1                       true         Event
flowschemas                                    flowcontrol.apiserver.k8s.io/v1beta2   false        FlowSchema
prioritylevelconfigurations                    flowcontrol.apiserver.k8s.io/v1beta2   false        PriorityLevelConfiguration
ingressclasses                                 networking.k8s.io/v1                   false        IngressClass
ingresses                         ing          networking.k8s.io/v1                   true         Ingress
networkpolicies                   netpol       networking.k8s.io/v1                   true         NetworkPolicy
runtimeclasses                                 node.k8s.io/v1                         false        RuntimeClass
poddisruptionbudgets              pdb          policy/v1                              true         PodDisruptionBudget
podsecuritypolicies               psp          policy/v1beta1                         false        PodSecurityPolicy
clusterrolebindings                            rbac.authorization.k8s.io/v1           false        ClusterRoleBinding
clusterroles                                   rbac.authorization.k8s.io/v1           false        ClusterRole
rolebindings                                   rbac.authorization.k8s.io/v1           true         RoleBinding
roles                                          rbac.authorization.k8s.io/v1           true         Role
priorityclasses                   pc           scheduling.k8s.io/v1                   false        PriorityClass
csidrivers                                     storage.k8s.io/v1                      false        CSIDriver
csinodes                                       storage.k8s.io/v1                      false        CSINode
csistoragecapacities                           storage.k8s.io/v1beta1                 true         CSIStorageCapacity
storageclasses                    sc           storage.k8s.io/v1                      false        StorageClass
volumeattachments                              storage.k8s.io/v1                      false        VolumeAttachment


Namespace
POD

ReplicationControll
Deployment
Services
RBAC - 5
Storage - 5

========================================================
API
	Coding 	- C R U D
	Use		- Post Read Put Delete

========================================================
Create
		CMD
			create
		YAML
			create -f yaml
Read
		CMD
			get 
			describe
		YAML
			get -f yaml
			 

Update
		CMD
			edit
		YAML
			apply -f yaml

Delete
		CMD
			delete 
		YAML
			delete -f



 32  ls
   33  kubectl get nodes
   34  kubectl
   35  clear
   36  kubectl cluster-info
   37  kubectl get nodes
   38  history
   39  kubectl get nodes
   40  clear
   41  kubectl
   42  clear
   43  kubectl api-resources
   44  clear
   45  kubectl api-resources
   46  kubectl api-resources | wc -l
   47  clear
   48  kubectl
   49  clear
   50  ls
   51  kubectl get ns
   52  kubectl get pods --all-namespaces
   53  clear
   54  kubectl create ns dev
   55  kubectl create ns qa
   56  kubectl get ns
   57  kubectl describe ns dev
   58  clear
   59  kubectl edit ns dev
   60  kubectl describe ns dev
   61  kubectl delete ns dev
   62  kubectl get ns


https://www.devopsschool.com/blog/kubernetes-pod-example-programs/

apiVersion: v1
kind: Pod
metadata:
  name: nodehelloworld.example.com
  labels:
    app: helloworld
spec:
  containers:
  - name: devopsschool1
    image: scmgalaxy/nginx-devopsschoolv1
    ports:
    - name: nginx-port
      containerPort: 80



  66  vi pod.yaml
   67  kubectl create -f pod.yaml
   68  kubectl get ns
   69  kubectl get pods
   70  kubectl create -f pod.yaml -n=qa
   71  kubectl get pods
   72  kubectl get pods -n=qa
   73  kubectl get pods --all-namespacesx
   74  kubectl get pods --all-namespaces
   75  clear
   76  ls
   77  kubectl get pods
   78  kubectl get -f pod.yaml
   79  kubectl describe pod nodehelloworld.example.com
   80  clear
   81  ls
   82  vi pod.yaml
   83  kubectl get pods --show-labels
   84  kubectl apply -f pod.yaml
   85  kubectl get pods --show-labels
   86  kubectl delete -f pod.yaml
   87  kubectl get pods --all-namespaces
   88  clear

===================================================

Troubleshooting and Debugging Commands:
  describe      Show details of a specific resource or group of resources
  logs          Print the logs for a container in a pod
  attach        Attach to a running container
  exec          Execute a command in a container
  port-forward  Forward one or more local ports to a pod
  cp            Copy files and directories to and from containers
  auth          Inspect authorization


kubectl port-forward --address 0.0.0.0 pod/nodehelloworld.example.com 8888:80




 93  kubectl get pods
   94  clear
   95  ls
   96  kubectl apply -f pod.yaml
   97  kubectl get pods
   98  clear
   99  kubectl get pods
  100  kubectl get pods -o wide
  101  curl http://192.168.1.4
  102  cd
  103  ls
  104  kubectl logs nodehelloworld.example.com
  105  kubectl logs -h
  106  clear
  107  kubectl get pods
  108  kubectl attach nodehelloworld.example.com
  109  history
  110  clear
  111  kubectl attach nodehelloworld.example.com
  112  clear
  113  kubectl get pods
  114  kubectl exec nodehelloworld.example.com ls
  115  clear
  116  kubectl exec -it nodehelloworld.example.com /bin/bash
  117  clear
  118  kubectl port-forward -h
  119  clear
  120  kubectl get pods
  121  clear
  122  kubectl port-forward --address 0.0.0.0 pod/nodehelloworld.example.com 8888:80
  123  cleart
  124  clear
  125  kubectl get pods
  126  ls
  127  kubectl exec nodehelloworld.example.com ls /tmp
  128  kubectl cp pod.yaml nodehelloworld.example.com:/tmp
  129  kubectl exec nodehelloworld.example.com ls /tmp
  130  cleart
  131  clear
  132  kubectl auth
  133  kubectl auth can-i create pod
  134  kubectl auth can-i create svc
  135  history








