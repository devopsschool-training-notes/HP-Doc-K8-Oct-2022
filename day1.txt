hardware

		Kernal
				Namespace			OS		CAN
						user		MUL		MUL
						net			1		MUL
						pid			1		MUL
						mnt			1		MUL
				cgroups
				Capa	
							root | non root

SYSTEM FILESYSTEM
----------------------------
BOOTFS --> ROOTFS --> USERFS -> APPFS
--------------------------------------
KERNAL --> centos  -> apache -> apache
			ubuntu  --> jdk(jenkins user) -> jenkins
----------------------------------------
		  ------------------------------
						docker image
			-------------------------
			mounted in each cont


How to install Docker?
--------------------------------------
https://www.devopsschool.com/blog/how-to-install-docker-in-linux/

   13  docker
   15  clear
   16  which docker
   17  which dockerd
   18  ps -eaf | grep docker
   19  systemctl status docker
   20  clear
   21  systemctl stop docker
   22  systemctl start docker
   23  systemctl status docker
   24  clear
   25  history

  28  clear
   29  docker ps
   30  docker ps -a
   31  docker images
   32  history



Container Lifecycle
-------------------------
create -> start -> stop -> start -> restart -> pause  -> unpause -> kill -> remove

38  docker create --name raj httpd
   39  docker ps
   40  docker ps 0a
   41  docker ps -a
   42  docker create httpd
   43  docker ps -a
   44  docker start d37c24323b8c
   45  docker ps -a
   46  cler
   47  clear
   48  docker ps -a
   49  docker create httpd
   50  docker ps -a
   51  docker start 36063d3ac901
   52  docker ps -a
   53  clear
   54  docker ps -a
   55  docker stop d37c24323b8c
   56  docker ps -a
   57  docker start d37c24323b8c
   58  docker ps -a
   59  docker restart 36063d3ac901
   60  docker ps -a
   61  clear
   62  docker ps -a
   63  docker pause d37c24323b8c
   64  docker ps -a
   65  docker unpause d37c24323b8c
   66  docker ps -a
   67  docker kill 36063d3ac901
   68  docker ps -a
   69  clear
   70  docker ps
   71  docker ps -a
   72  docker rm d37c24323b8c
   73  docker rm 36063d3ac901 2135e2f597ce
   74  docker ps -a
   75  history



Assignment
---------------------------------
Submit on Debu.school
Q1. What is difference between docker kill and docker stop?
Q2. What is difference between docker pause and docker unpause?


============================================
How to use Container?
- Go inside using shell
- Access from outside using network
		From outside


   9  docker ps
   10  docker exec 49b669456994 ls
   11  docker exec 49b669456994 df
   12  clear
   13  docker ps
   14  docker exec -it 49b669456994 /bin/bash
   15  clear
   16  docker ps
   17  docker inspect 49b669456994
   18  clear
   19  docker inspect 49b669456994 | grep ip
   20  docker inspect 49b669456994 | grep 172
   21  curl http://172.17.0.2
   22  clear
   23  docker create -p 80:80 httpd
   24  docker ps -a
   25  docker start 2b339e961e9c
   26  docker ps
   27  docker create -p 81:80 httpd
   28  docker start c34c9c3d134169b928cc76ee15953232a7ec15494f0221ded5718e8674e04ea1
   29  clear
   30  docker ps

=====================================================================
PID 1
---------------------------
PS 					VM				Container

Coz of pId1			Coz of pId1		Coz of pId1
init/systemd		init/systemd	bash python java x y z
									---------------------------
									Creating an image - CMD vs ENTRYPOINT

docker attach cont-id
-----------------------------
		attach to PID1

 30  docker ps
   31  history
   32  clear
   33  ps -eaf
   34  clear
   35  docker run -itd ubuntu
   36  docker ps
   37  docker exec 5d8fa60485f8 ps -eaf
   38  ps -eaf
   39  clear
   40  docker pos
   41  docker ps
   42  docker attach 5d8fa60485f8
   43  docker ps
   44  clear
   45  docker attach c34c9c3d1341
   46  docker ps
   47  clear


run
-------------------------------
pull + create + start + attach

run -d
-------------------------------
pull + create + start + do not attach
=====================================================

What is Image?
------------------
Collection of file system

root + app + app


Requirement
-------------------------------------
ubuntu -> java + git + apache2 === mgmrimage
		------------------------
					1 layer??
-------------------------------------------

FROM ubuntu
MAINTAINER Rajesh Kumar
RUN apt-get update
RUN apt-get install git -y
COPY index.html /opt
ENV JAVA_HOME /tmp/java


 83  docker commit -m"up-ub-git-java" -a"Rajesh" 3ed825eabdf5 up-ub-git-java
   84  docker images
   85  ls
   86  touch index.html
   87  ls
   88  clear
   89  ls
   90  vi dockerfile
   91  more dockerfile
   92  clear
   93  ls
   94  docker build -t raju .
   95  clear
   96  docker images


  94  docker build -t raju .
   95  clear
   96  docker images
   97  history
   98  clear
   99  ls
  100  docker login
  101  clear
  102  docker images
  103  docker tag raju devopsschools/monday-oct-22
  104  docker images
  105  docker push devopsschools/monday-oct-22
  106  clear
  107  docker logout












